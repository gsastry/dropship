#!/usr/bin/env python
"""
Hash a file per 4MB. Produce a blocklist that can be used with
`injectfile`.
"""
# Copyright (C) 2011 by Wladimir van der Laan
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
import json
import hashlib
from sys import stdout as out, stderr as err
import os
from os import path

BLOCKSIZE = 4*1024*1024

if __name__ == "__main__":
    import sys
    try:
        filename = sys.argv[1]
    except IndexError:
        err.write("Usage: %s <file>\n" % sys.argv[0])
        exit(1)
    f = open(filename, "rb")
    barray = []
    
    while True:
        data = f.read(BLOCKSIZE)
        if not data:
            break
        barray.append(hashlib.sha256(data).hexdigest())
        
    size = f.tell()
    stat = os.stat(filename)
        
    outdata = {
        "blocks":barray,
        "size":size,
        "name":path.basename(filename),
        "mtime":stat.st_mtime,
    }
    outdata = json.dumps(outdata) + '\n'
    
    out.write(outdata)
    
    
    
    